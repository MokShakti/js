'use strict'

//–£–º–æ–≤–∞: –ú–æ—Ä—Å—å–∫–∏–π –±—ñ–π: –í–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º –Ω–∞ –¥–≤–æ–≤–∏–º—ñ—Ä–Ω–æ–º—É –ø–æ–ª—ñ —Ä–æ–∑–º—ñ—Ä–æ–º 6 * 6 —Ä–æ–∑—Ç–∞—à–æ–≤—É—î—Ç—å—Å—è 5 –∫–æ—Ä–∞–±–ª—ñ–≤.–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç—Ä—ñ–ª—è—î –≤–∫–∞–∑—É—é—á–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏.–ì—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂—É—î—Ç—å—Å—è –ø–æ–∫–∏ –Ω–µ –ø–æ—Ç–æ–ø–ª–µ–Ω–æ —É—Å—ñ –∫–æ—Ä–∞–±–ª—ñ –∞–±–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–∞–∫—ñ–Ω—á–∞—Ç—å—Å—è —Å–Ω–∞—Ä—è–¥–∏.

if (confirm(`Shall we start the test?`)) {
   const gridSize = 6;
   const numShips = 5;
   let shotsLeft = 10;

   let ships = [];

   while (ships.length < numShips) {
      let x = Math.floor(Math.random() * gridSize);
      let y = Math.floor(Math.random() * gridSize);

      let exists = false;
      for (let ship of ships) {
         if (ship[0] === x && ship[1] === y) {
            exists = true;
            break;
         }
      }

      if (!exists) {
         ships.push([x, y]);
      }
   }

   alert(`Welcome to Battleship!`);
   alert(`Grid size: 6x6. Enter coordinates (0-5).`);

   while (shotsLeft > 0 && ships.length > 0) {
      let x = parseInt(prompt(`Enter row (0-5):`), 10);
      let y = parseInt(prompt(`Enter column (0-5):`), 10);

      if (isNaN(x) || isNaN(y) || x < 0 || x >= gridSize || y < 0 || y >= gridSize) {
         alert(`‚ùå Invalid input! Enter numbers between 0 and 5.`);
         continue;
      }

      let hit = false;
      for (let i = 0; i < ships.length; i++) {
         if (ships[i][0] === x && ships[i][1] === y) {
            alert(`üî• Hit! Ship destroyed!`);
            ships.splice(i, 1);
            hit = true;
            break;
         }
      }

      if (!hit) {
         console.log(`üí¶ Miss!`);
      }

      shotsLeft--;
      alert(`Shots left: ${shotsLeft}`);
   }

   if (ships.length === 0) {
      document.write(`üéâ Congratulations! You destroyed all the ships!`);
   } else {
      alert(`üíÄ Game over! You ran out of shots.`);
   }
}